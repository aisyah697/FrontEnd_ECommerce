{"ast":null,"code":"import axios from \"axios\";\nexport const allProducts = () => {\n  return dispatch => {\n    axios.get(\"http://0.0.0.0:5000/product/list\").then(response => {\n      console.warn(\"check product action\", response);\n      dispatch({\n        type: \"GET_ALL_PRODUCTS\",\n        payload: response.data\n      });\n    }).catch(error => {\n      console.warn(error);\n    });\n  };\n};\nexport const productCategory = () => {\n  return dispatch => {\n    axios.get(\"http://0.0.0.0:5000/product_category\").then(response => {\n      dispatch({\n        type: \"GET_PRODUCT_CATEGORY\",\n        payload: response.data\n      });\n    }).catch(error => console.error(error));\n  };\n};\nexport const handleInputChange = event => {\n  let value = event.target.value;\n  return async dispatch => {\n    await dispatch({\n      type: \"SEARCH_PRODUCT\",\n      payload: value\n    });\n    dispatch(searchProduct(value));\n  };\n};\nexport const addProduct = props => {\n  return async (dispatch, getState) => {\n    const category = getState().product.category;\n    const promo = getState().product.promo;\n    let id;\n\n    if (category === \"Natural Oils\") {\n      id = 1;\n    } else if (category === \"Aromatherapy\") {\n      id = 2;\n    } else if (category === \"Bath & Body\") {\n      id = 3;\n    } else {\n      id = 4;\n    }\n\n    let input;\n\n    if (promo === \"true\") {\n      input = true;\n    } else {\n      input = false;\n    }\n\n    const bodyRequest = {\n      name: getState().product.product_name,\n      price: getState().product.price,\n      image: getState().product.image,\n      weight: getState().product.weight,\n      stock: getState().product.stock,\n      description: getState.product.description,\n      promo: input,\n      discount: getState().product.discount,\n      category: id\n    };\n    const myJSON = JSON.stringify(bodyRequest);\n    const token = localStorage.getItem(\"token\");\n    await axios.post(\"http://0.0.0.0:5050/items\", myJSON, {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json; charset=utf-8\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(async response => {\n      dispatch({\n        type: \"ADD_PRODUCT_SUCCESS\"\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport const searchProduct = keyword => {\n  return async dispatch => {\n    if (keyword.length > 2) {\n      try {\n        const getProduct = await axios.get(\"http://0.0.0.0:5000/product/list\");\n        dispatch({\n          type: \"GET_ALL_PRODUCTS\",\n          payload: getProduct\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/alta4/Documents/FrontEnd_ECommerce/semerbak_project/src/store/actions/actionProduct.js"],"names":["axios","allProducts","dispatch","get","then","response","console","warn","type","payload","data","catch","error","productCategory","handleInputChange","event","value","target","searchProduct","addProduct","props","getState","category","product","promo","id","input","bodyRequest","name","product_name","price","image","weight","stock","description","discount","myJSON","JSON","stringify","token","localStorage","getItem","post","headers","Accept","Authorization","log","keyword","length","getProduct"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nexport const allProducts = () => {\n    return (dispatch) => {\n        axios\n            .get(\"http://0.0.0.0:5000/product/list\")\n            .then((response) => {\n                console.warn(\"check product action\", response)\n                dispatch({\n                    type: \"GET_ALL_PRODUCTS\",\n                    payload: response.data\n                })\n            })\n            .catch((error) => {\n                console.warn(error)\n            })\n    }\n}\n\nexport const productCategory = () => {\n    return (dispatch) => {\n        axios\n            .get(\"http://0.0.0.0:5000/product_category\")\n            .then((response) => {\n                dispatch({\n                    type: \"GET_PRODUCT_CATEGORY\",\n                    payload: response.data\n                })\n            })\n            .catch((error) => (console.error(error)))\n    }\n}\n\nexport const handleInputChange = (event) => {\n    let value = event.target.value;\n    return async(dispatch) => {\n        await dispatch({ type: \"SEARCH_PRODUCT\", payload: value });\n        dispatch(searchProduct(value));\n    };\n}\n\nexport const addProduct = (props) => {\n    return async(dispatch, getState) => {\n        const category = getState().product.category;\n        const promo = getState().product.promo;\n        let id;\n        if (category === \"Natural Oils\") {\n            id = 1;\n        } else if (category === \"Aromatherapy\") {\n            id = 2;\n        } else if (category === \"Bath & Body\") {\n            id = 3;\n        } else {\n            id = 4;\n        }\n\n        let input;\n        if (promo === \"true\") {\n            input = true;\n        } else {\n            input = false;\n        }\n        const bodyRequest = {\n            name: getState().product.product_name,\n            price: getState().product.price,\n            image: getState().product.image,\n            weight: getState().product.weight,\n            stock: getState().product.stock,\n            description: getState.product.description,\n            promo: input,\n            discount: getState().product.discount,\n            category: id,\n        };\n        const myJSON = JSON.stringify(bodyRequest);\n        const token = localStorage.getItem(\"token\");\n        await axios\n            .post(\"http://0.0.0.0:5050/items\", myJSON, {\n                headers: {\n                    \"Content-Type\": \"application/json; charset=utf-8\",\n                    Accept: \"application/json; charset=utf-8\",\n                    Authorization: `Bearer ${token}`,\n                },\n            })\n            .then(async(response) => {\n                dispatch({ type: \"ADD_PRODUCT_SUCCESS\" });\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    };\n};\n\n\nexport const searchProduct = (keyword) => {\n    return async(dispatch) => {\n        if (keyword.length > 2) {\n            try {\n                const getProduct = await axios.get(\n                    \"http://0.0.0.0:5000/product/list\"\n                );\n                dispatch({\n                    type: \"GET_ALL_PRODUCTS\",\n                    payload: getProduct,\n                });\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}