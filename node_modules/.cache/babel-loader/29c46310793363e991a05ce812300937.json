{"ast":null,"code":"import axios from \"axios\";\nconst url = process.env.REACT_APP_BASE_URL;\nexport const getCart = () => {\n  return (dispatch, getState) => {\n    axios.get(url + \"transaction\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + getState().user.token\n      }\n    }).then(response => {\n      dispatch({\n        type: \"GET_CUSTOMER_CART\",\n        payload: response.data\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n};\nexport const postCart = product_id => {\n  return (dispatch, getState) => {\n    axios({\n      method: \"POST\",\n      url: url + \"transaction\",\n      headers: {\n        Authorization: `Bearer ${getState().user.token}`\n      },\n      params: {\n        product_id: product_id,\n        quantity: getState().cart.quantity\n      }\n    });\n  };\n};\nexport const updateInputQty = event => ({\n  type: \"UPDATE_INPUT_QUANTITY\",\n  payload: event\n});\nexport const deleteCart = id => {\n  return (dispatch, getState) => {\n    axios({\n      method: \"DELETE\",\n      url: `${url}transaction/${id}`,\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json; charset=utf-8\",\n        Authorization: `Bearer ${getState().user.token}`\n      }\n    });\n  };\n};\nexport const doCheckout = () => {\n  return (dispatch, getState) => {\n    axios({\n      method: \"POST\",\n      url: `${url}checkout`,\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json; charset=utf-8\",\n        Authorization: `Bearer ${getState().user.token}`\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/alta4/FrontEnd_Ecommerce/semerbak_project/src/store/actions/actionCart.js"],"names":["axios","url","process","env","REACT_APP_BASE_URL","getCart","dispatch","getState","get","headers","user","token","then","response","type","payload","data","catch","error","console","postCart","product_id","method","Authorization","params","quantity","cart","updateInputQty","event","deleteCart","id","Accept","doCheckout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BP,IAAAA,KAAK,CAACQ,GAAN,CAAUP,GAAG,GAAG,aAAhB,EAA+B;AACvBQ,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYF,QAAQ,GAAGG,IAAX,CAAgBC;AADxC;AADc,KAA/B,EAKKC,IALL,CAKWC,QAAD,IAAc;AAChBP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CAAR;AAIH,KAVL,EAWKC,KAXL,CAWYC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAbL;AAcH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAME,QAAQ,GAAIC,UAAD,IAAgB;AACpC,SAAO,CAACf,QAAD,EAAWC,QAAX,KAAwB;AAC3BP,IAAAA,KAAK,CAAC;AACFsB,MAAAA,MAAM,EAAE,MADN;AAEFrB,MAAAA,GAAG,EAAEA,GAAG,GAAG,aAFT;AAGFQ,MAAAA,OAAO,EAAE;AAAEc,QAAAA,aAAa,EAAG,UAAShB,QAAQ,GAAGG,IAAX,CAAgBC,KAAM;AAAjD,OAHP;AAIFa,MAAAA,MAAM,EAAE;AACJH,QAAAA,UAAU,EAAEA,UADR;AAEJI,QAAAA,QAAQ,EAAElB,QAAQ,GAAGmB,IAAX,CAAgBD;AAFtB;AAJN,KAAD,CAAL;AASH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAME,cAAc,GAAIC,KAAD,KAAY;AACtCd,EAAAA,IAAI,EAAE,uBADgC;AAEtCC,EAAAA,OAAO,EAAEa;AAF6B,CAAZ,CAAvB;AAKP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQ;AAC9B,SAAO,CAACxB,QAAD,EAAWC,QAAX,KAAwB;AAC3BP,IAAAA,KAAK,CAAC;AACFsB,MAAAA,MAAM,EAAE,QADN;AAEFrB,MAAAA,GAAG,EAAG,GAAEA,GAAI,eAAc6B,EAAG,EAF3B;AAGFrB,MAAAA,OAAO,EAAE;AACL,wBAAgB,iCADX;AAELsB,QAAAA,MAAM,EAAE,iCAFH;AAGLR,QAAAA,aAAa,EAAG,UAAShB,QAAQ,GAAGG,IAAX,CAAgBC,KAAM;AAH1C;AAHP,KAAD,CAAL;AASH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMqB,UAAU,GAAG,MAAM;AAC5B,SAAO,CAAC1B,QAAD,EAAWC,QAAX,KAAwB;AAC3BP,IAAAA,KAAK,CAAC;AACFsB,MAAAA,MAAM,EAAE,MADN;AAEFrB,MAAAA,GAAG,EAAG,GAAEA,GAAI,UAFV;AAGFQ,MAAAA,OAAO,EAAE;AACL,wBAAgB,iCADX;AAELsB,QAAAA,MAAM,EAAE,iCAFH;AAGLR,QAAAA,aAAa,EAAG,UAAShB,QAAQ,GAAGG,IAAX,CAAgBC,KAAM;AAH1C;AAHP,KAAD,CAAL;AASH,GAVD;AAWH,CAZM","sourcesContent":["import axios from \"axios\";\n\nconst url = process.env.REACT_APP_BASE_URL\n\nexport const getCart = () => {\n    return (dispatch, getState) => {\n        axios.get(url + \"transaction\", {\n                headers: {\n                    \"Authorization\": \"Bearer \" + getState().user.token\n                }\n            })\n            .then((response) => {\n                dispatch({\n                    type: \"GET_CUSTOMER_CART\",\n                    payload: response.data\n                })\n            })\n            .catch((error) => {\n                console.error(error)\n            })\n    }\n}\n\nexport const postCart = (product_id) => {\n    return (dispatch, getState) => {\n        axios({\n            method: \"POST\",\n            url: url + \"transaction\",\n            headers: { Authorization: `Bearer ${getState().user.token}` },\n            params: {\n                product_id: product_id,\n                quantity: getState().cart.quantity\n            }\n        })\n    }\n}\n\nexport const updateInputQty = (event) => ({\n    type: \"UPDATE_INPUT_QUANTITY\",\n    payload: event\n})\n\nexport const deleteCart = (id) => {\n    return (dispatch, getState) => {\n        axios({\n            method: \"DELETE\",\n            url: `${url}transaction/${id}`,\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                Accept: \"application/json; charset=utf-8\",\n                Authorization: `Bearer ${getState().user.token}`\n            }\n        })\n    }\n}\n\nexport const doCheckout = () => {\n    return (dispatch, getState) => {\n        axios({\n            method: \"POST\",\n            url: `${url}checkout`,\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                Accept: \"application/json; charset=utf-8\",\n                Authorization: `Bearer ${getState().user.token}`\n            }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}