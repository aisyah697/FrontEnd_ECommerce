{"ast":null,"code":"import axios from\"axios\";var url=process.env.REACT_APP_BASE_URL;export var getCart=function getCart(){return function(dispatch,getState){axios.get(url+\"transaction\",{headers:{\"Authorization\":\"Bearer \"+getState().user.token}}).then(function(response){dispatch({type:\"GET_CUSTOMER_CART\",payload:response.data});}).catch(function(error){console.error(error);});};};export var postCart=function postCart(product_id){return function(dispatch,getState){axios({method:\"POST\",url:url+\"transaction\",headers:{Authorization:\"Bearer \".concat(getState().user.token)},params:{product_id:product_id,quantity:getState().cart.quantity}});};};export var updateInputQty=function updateInputQty(event){return{type:\"UPDATE_INPUT_QUANTITY\",payload:event};};export var deleteCart=function deleteCart(id){return function(dispatch,getState){axios({method:\"DELETE\",url:\"\".concat(url,\"transaction/\").concat(id),headers:{\"Content-Type\":\"application/json; charset=utf-8\",Accept:\"application/json; charset=utf-8\",Authorization:\"Bearer \".concat(getState().user.token)}});};};export var doCheckout=function doCheckout(){return function(dispatch,getState){axios({method:\"POST\",url:\"\".concat(url,\"checkout\"),headers:{\"Content-Type\":\"application/json; charset=utf-8\",Accept:\"application/json; charset=utf-8\",Authorization:\"Bearer \".concat(getState().user.token)}});};};","map":{"version":3,"sources":["/home/alta4/FrontEnd_Ecommerce/semerbak_project/src/store/actions/actionCart.js"],"names":["axios","url","process","env","REACT_APP_BASE_URL","getCart","dispatch","getState","get","headers","user","token","then","response","type","payload","data","catch","error","console","postCart","product_id","method","Authorization","params","quantity","cart","updateInputQty","event","deleteCart","id","Accept","doCheckout"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAxB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACzB,MAAO,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC3BP,KAAK,CAACQ,GAAN,CAAUP,GAAG,CAAG,aAAhB,CAA+B,CACvBQ,OAAO,CAAE,CACL,gBAAiB,UAAYF,QAAQ,GAAGG,IAAX,CAAgBC,KADxC,CADc,CAA/B,EAKKC,IALL,CAKU,SAACC,QAAD,CAAc,CAChBP,QAAQ,CAAC,CACLQ,IAAI,CAAE,mBADD,CAELC,OAAO,CAAEF,QAAQ,CAACG,IAFb,CAAD,CAAR,CAIH,CAVL,EAWKC,KAXL,CAWW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACD,KAAR,CAAcA,KAAd,EACH,CAbL,EAcH,CAfD,CAgBH,CAjBM,CAmBP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,UAAD,CAAgB,CACpC,MAAO,UAACf,QAAD,CAAWC,QAAX,CAAwB,CAC3BP,KAAK,CAAC,CACFsB,MAAM,CAAE,MADN,CAEFrB,GAAG,CAAEA,GAAG,CAAG,aAFT,CAGFQ,OAAO,CAAE,CAAEc,aAAa,kBAAYhB,QAAQ,GAAGG,IAAX,CAAgBC,KAA5B,CAAf,CAHP,CAIFa,MAAM,CAAE,CACJH,UAAU,CAAEA,UADR,CAEJI,QAAQ,CAAElB,QAAQ,GAAGmB,IAAX,CAAgBD,QAFtB,CAJN,CAAD,CAAL,CASH,CAVD,CAWH,CAZM,CAcP,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QAAY,CACtCd,IAAI,CAAE,uBADgC,CAEtCC,OAAO,CAAEa,KAF6B,CAAZ,EAAvB,CAKP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAQ,CAC9B,MAAO,UAACxB,QAAD,CAAWC,QAAX,CAAwB,CAC3BP,KAAK,CAAC,CACFsB,MAAM,CAAE,QADN,CAEFrB,GAAG,WAAKA,GAAL,wBAAuB6B,EAAvB,CAFD,CAGFrB,OAAO,CAAE,CACL,eAAgB,iCADX,CAELsB,MAAM,CAAE,iCAFH,CAGLR,aAAa,kBAAYhB,QAAQ,GAAGG,IAAX,CAAgBC,KAA5B,CAHR,CAHP,CAAD,CAAL,CASH,CAVD,CAWH,CAZM,CAcP,MAAO,IAAMqB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC5B,MAAO,UAAC1B,QAAD,CAAWC,QAAX,CAAwB,CAC3BP,KAAK,CAAC,CACFsB,MAAM,CAAE,MADN,CAEFrB,GAAG,WAAKA,GAAL,YAFD,CAGFQ,OAAO,CAAE,CACL,eAAgB,iCADX,CAELsB,MAAM,CAAE,iCAFH,CAGLR,aAAa,kBAAYhB,QAAQ,GAAGG,IAAX,CAAgBC,KAA5B,CAHR,CAHP,CAAD,CAAL,CASH,CAVD,CAWH,CAZM","sourcesContent":["import axios from \"axios\";\n\nconst url = process.env.REACT_APP_BASE_URL\n\nexport const getCart = () => {\n    return (dispatch, getState) => {\n        axios.get(url + \"transaction\", {\n                headers: {\n                    \"Authorization\": \"Bearer \" + getState().user.token\n                }\n            })\n            .then((response) => {\n                dispatch({\n                    type: \"GET_CUSTOMER_CART\",\n                    payload: response.data\n                })\n            })\n            .catch((error) => {\n                console.error(error)\n            })\n    }\n}\n\nexport const postCart = (product_id) => {\n    return (dispatch, getState) => {\n        axios({\n            method: \"POST\",\n            url: url + \"transaction\",\n            headers: { Authorization: `Bearer ${getState().user.token}` },\n            params: {\n                product_id: product_id,\n                quantity: getState().cart.quantity\n            }\n        })\n    }\n}\n\nexport const updateInputQty = (event) => ({\n    type: \"UPDATE_INPUT_QUANTITY\",\n    payload: event\n})\n\nexport const deleteCart = (id) => {\n    return (dispatch, getState) => {\n        axios({\n            method: \"DELETE\",\n            url: `${url}transaction/${id}`,\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                Accept: \"application/json; charset=utf-8\",\n                Authorization: `Bearer ${getState().user.token}`\n            }\n        })\n    }\n}\n\nexport const doCheckout = () => {\n    return (dispatch, getState) => {\n        axios({\n            method: \"POST\",\n            url: `${url}checkout`,\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                Accept: \"application/json; charset=utf-8\",\n                Authorization: `Bearer ${getState().user.token}`\n            }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}