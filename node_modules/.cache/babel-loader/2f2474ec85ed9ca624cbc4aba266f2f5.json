{"ast":null,"code":"import axios from\"axios\";var url=process.env.REACT_APP_BASE_URL;export var getCart=function getCart(){return function(dispatch,getState){var token=localStorage.getItem(\"token\");axios.get(url+\"transaction\",{headers:{\"Authorization\":\"Bearer \"+token}}).then(function(response){dispatch({type:\"GET_CUSTOMER_CART\",payload:response.data});}).catch(function(error){console.error(error);});};};export var postCart=function postCart(product_id){return function(dispatch,getState){var token=localStorage.getItem(\"token\");axios({method:\"POST\",url:url+\"transaction\",headers:{Authorization:\"Bearer \".concat(token)},params:{product_id:product_id,quantity:getState().cart.quantity}});};};export var updateInputQty=function updateInputQty(event){return{type:\"UPDATE_INPUT_QUANTITY\",payload:event};};export var deleteCart=function deleteCart(id){return function(dispatch,getState){var token=localStorage.getItem(\"token\");axios({method:\"DELETE\",url:\"\".concat(url,\"transaction/\").concat(id),headers:{\"Content-Type\":\"application/json; charset=utf-8\",Accept:\"application/json; charset=utf-8\",Authorization:\"Bearer \".concat(token)}});};};export var doCheckout=function doCheckout(){return function(dispatch,getState){var token=localStorage.getItem(\"token\");axios({method:\"POST\",url:\"\".concat(url,\"checkout\"),headers:{\"Content-Type\":\"application/json; charset=utf-8\",Accept:\"application/json; charset=utf-8\",Authorization:\"Bearer \".concat(token)}});};};","map":{"version":3,"sources":["/home/alta4/Documents/FrontEnd_ECommerce/semerbak_project/src/store/actions/actionCart.js"],"names":["axios","url","process","env","REACT_APP_BASE_URL","getCart","dispatch","getState","token","localStorage","getItem","get","headers","then","response","type","payload","data","catch","error","console","postCart","product_id","method","Authorization","params","quantity","cart","updateInputQty","event","deleteCart","id","Accept","doCheckout"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAxB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACzB,MAAO,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC3B,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAEAV,KAAK,CAACW,GAAN,CAAUV,GAAG,CAAG,aAAhB,CAA+B,CACvBW,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CADc,CAA/B,EAKKK,IALL,CAKU,SAACC,QAAD,CAAc,CAChBR,QAAQ,CAAC,CACLS,IAAI,CAAE,mBADD,CAELC,OAAO,CAAEF,QAAQ,CAACG,IAFb,CAAD,CAAR,CAIH,CAVL,EAWKC,KAXL,CAWW,SAACC,KAAD,CAAW,CACdC,OAAO,CAACD,KAAR,CAAcA,KAAd,EACH,CAbL,EAcH,CAjBD,CAkBH,CAnBM,CAqBP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,UAAD,CAAgB,CACpC,MAAO,UAAChB,QAAD,CAAWC,QAAX,CAAwB,CAC3B,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAEAV,KAAK,CAAC,CACFuB,MAAM,CAAE,MADN,CAEFtB,GAAG,CAAEA,GAAG,CAAG,aAFT,CAGFW,OAAO,CAAE,CAAEY,aAAa,kBAAYhB,KAAZ,CAAf,CAHP,CAIFiB,MAAM,CAAE,CACJH,UAAU,CAAEA,UADR,CAEJI,QAAQ,CAAEnB,QAAQ,GAAGoB,IAAX,CAAgBD,QAFtB,CAJN,CAAD,CAAL,CASH,CAZD,CAaH,CAdM,CAgBP,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,QAAY,CACtCd,IAAI,CAAE,uBADgC,CAEtCC,OAAO,CAAEa,KAF6B,CAAZ,EAAvB,CAKP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAQ,CAC9B,MAAO,UAACzB,QAAD,CAAWC,QAAX,CAAwB,CAC3B,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAEAV,KAAK,CAAC,CACFuB,MAAM,CAAE,QADN,CAEFtB,GAAG,WAAKA,GAAL,wBAAuB8B,EAAvB,CAFD,CAGFnB,OAAO,CAAE,CACL,eAAgB,iCADX,CAELoB,MAAM,CAAE,iCAFH,CAGLR,aAAa,kBAAYhB,KAAZ,CAHR,CAHP,CAAD,CAAL,CASH,CAZD,CAaH,CAdM,CAgBP,MAAO,IAAMyB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC5B,MAAO,UAAC3B,QAAD,CAAWC,QAAX,CAAwB,CAC3B,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAEAV,KAAK,CAAC,CACFuB,MAAM,CAAE,MADN,CAEFtB,GAAG,WAAKA,GAAL,YAFD,CAGFW,OAAO,CAAE,CACL,eAAgB,iCADX,CAELoB,MAAM,CAAE,iCAFH,CAGLR,aAAa,kBAAYhB,KAAZ,CAHR,CAHP,CAAD,CAAL,CASH,CAZD,CAaH,CAdM","sourcesContent":["import axios from \"axios\";\n\nconst url = process.env.REACT_APP_BASE_URL\n\nexport const getCart = () => {\n    return (dispatch, getState) => {\n        const token = localStorage.getItem(\"token\");\n\n        axios.get(url + \"transaction\", {\n                headers: {\n                    \"Authorization\": \"Bearer \" + token\n                }\n            })\n            .then((response) => {\n                dispatch({\n                    type: \"GET_CUSTOMER_CART\",\n                    payload: response.data\n                })\n            })\n            .catch((error) => {\n                console.error(error)\n            })\n    }\n}\n\nexport const postCart = (product_id) => {\n    return (dispatch, getState) => {\n        const token = localStorage.getItem(\"token\");\n\n        axios({\n            method: \"POST\",\n            url: url + \"transaction\",\n            headers: { Authorization: `Bearer ${token}` },\n            params: {\n                product_id: product_id,\n                quantity: getState().cart.quantity\n            }\n        })\n    }\n}\n\nexport const updateInputQty = (event) => ({\n    type: \"UPDATE_INPUT_QUANTITY\",\n    payload: event\n})\n\nexport const deleteCart = (id) => {\n    return (dispatch, getState) => {\n        const token = localStorage.getItem(\"token\");\n\n        axios({\n            method: \"DELETE\",\n            url: `${url}transaction/${id}`,\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                Accept: \"application/json; charset=utf-8\",\n                Authorization: `Bearer ${token}`\n            }\n        })\n    }\n}\n\nexport const doCheckout = () => {\n    return (dispatch, getState) => {\n        const token = localStorage.getItem(\"token\");\n\n        axios({\n            method: \"POST\",\n            url: `${url}checkout`,\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n                Accept: \"application/json; charset=utf-8\",\n                Authorization: `Bearer ${token}`\n            }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}